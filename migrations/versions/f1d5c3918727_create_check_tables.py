"""create check tables

Revision ID: f1d5c3918727
Revises: ee5a7663d1cd
Create Date: 2023-07-23 20:56:08.296021

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f1d5c3918727'
down_revision = 'ee5a7663d1cd'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tbl_rule',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=45), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tbl_aup',
    sa.Column('id_aup', sa.Integer(), nullable=False),
    sa.Column('file', sa.String(length=255), nullable=False),
    sa.Column('num_aup', sa.String(length=255), nullable=False),
    sa.Column('base', sa.String(length=255), nullable=False),
    sa.Column('id_faculty', sa.Integer(), nullable=False),
    sa.Column('id_rop', sa.Integer(), nullable=False),
    sa.Column('type_educ', sa.String(length=255), nullable=False),
    sa.Column('qualification', sa.String(length=255), nullable=False),
    sa.Column('type_standard', sa.String(length=255), nullable=False),
    sa.Column('department', sa.String(length=255), nullable=True),
    sa.Column('period_educ', sa.String(length=255), nullable=False),
    sa.Column('id_degree', sa.Integer(), nullable=False),
    sa.Column('id_form', sa.Integer(), nullable=False),
    sa.Column('years', sa.Integer(), nullable=False),
    sa.Column('months', sa.Integer(), nullable=True),
    sa.Column('id_spec', sa.Integer(), nullable=False),
    sa.Column('year_beg', sa.Integer(), nullable=False),
    sa.Column('year_end', sa.Integer(), nullable=False),
    sa.Column('is_actual', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['id_degree'], ['spr_degree_education.id_degree'], ),
    sa.ForeignKeyConstraint(['id_faculty'], ['spr_faculty.id_faculty'], ),
    sa.ForeignKeyConstraint(['id_form'], ['spr_form_education.id_form'], ),
    sa.ForeignKeyConstraint(['id_rop'], ['spr_rop.id_rop'], ),
    sa.ForeignKeyConstraint(['id_spec'], ['spr_name_op.id_spec'], ),
    sa.PrimaryKeyConstraint('id_aup')
    )
    op.create_table('aup_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_aup', sa.Integer(), nullable=False),
    sa.Column('id_block', sa.Integer(), nullable=False),
    sa.Column('shifr', sa.String(length=30), nullable=False),
    sa.Column('id_part', sa.Integer(), nullable=False),
    sa.Column('id_module', sa.Integer(), nullable=False),
    sa.Column('id_group', sa.Integer(), nullable=False),
    sa.Column('id_type_record', sa.Integer(), nullable=False),
    sa.Column('discipline', sa.String(length=350), nullable=False),
    sa.Column('id_period', sa.Integer(), nullable=False),
    sa.Column('num_row', sa.Integer(), nullable=False),
    sa.Column('id_type_control', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('id_edizm', sa.Integer(), nullable=False),
    sa.Column('zet', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_aup'], ['tbl_aup.id_aup'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['id_block'], ['d_blocks.id'], ),
    sa.ForeignKeyConstraint(['id_edizm'], ['d_ed_izmereniya.id'], ),
    sa.ForeignKeyConstraint(['id_module'], ['d_modules.id'], ),
    sa.ForeignKeyConstraint(['id_part'], ['d_part.id'], ),
    sa.ForeignKeyConstraint(['id_type_control'], ['d_control_type.id'], ),
    sa.ForeignKeyConstraint(['id_type_record'], ['d_type_record.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('aup_info_has_rule',
    sa.Column('rule_id', sa.Integer(), nullable=False),
    sa.Column('aup_info_id', sa.Integer(), nullable=False),
    sa.Column('min', sa.Float(), nullable=True),
    sa.Column('max', sa.Float(), nullable=True),
    sa.Column('ed_izmereniya_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['aup_info_id'], ['tbl_aup.id_aup'], ),
    sa.ForeignKeyConstraint(['ed_izmereniya_id'], ['d_ed_izmereniya.id'], ),
    sa.ForeignKeyConstraint(['rule_id'], ['tbl_rule.id'], ),
    sa.PrimaryKeyConstraint('rule_id', 'aup_info_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('aup_info_has_rule')
    op.drop_table('aup_data')
    op.drop_table('tbl_aup')
    op.drop_table('tbl_rule')
    # ### end Alembic commands ###
