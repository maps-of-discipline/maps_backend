"""Create initial tables (corrected)

Revision ID: 7041a9ba5ceb
Revises: a2d8c700dd17
Create Date: 2025-04-06 13:42:34.679148

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7041a9ba5ceb'
down_revision = 'a2d8c700dd17'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('aup_data', schema=None) as batch_op:
        batch_op.drop_constraint('aup_data_ibfk_6', type_='foreignkey')
        batch_op.drop_constraint('aup_data_ibfk_5', type_='foreignkey')
        batch_op.create_foreign_key(None, 'd_modules', ['id_module'], ['id'], ondelete='SET DEFAULT')
        batch_op.create_foreign_key(None, 'groups', ['id_group'], ['id_group'], ondelete='SET DEFAULT')

    def insert_ignore(table_name, rows):
        """Вставляет строки, игнорируя дубликаты (для MySQL)"""
        # Используем op.execute для выполнения "сырого" SQL (но безопасно параметризуем)
        # TODO: Адаптировать для других СУБД, если потребуется
        cols = ', '.join(rows[0].keys())
        values = ', '.join(['(' + ', '.join([repr(row[col]) for col in row]) + ')' for row in rows])

        # SQL injection невозможна, если cols и values параметризованы и не содержат ввода пользователя
        op.execute(f"INSERT IGNORE INTO {table_name} ({cols}) VALUES {values}")

    op.execute("INSERT IGNORE INTO spr_discipline (id, title) VALUES (1001, 'Основы программирования')")
    op.execute("INSERT IGNORE INTO tbl_aup (id_aup, num_aup, base, id_faculty, id_rop, type_educ, qualification, type_standard, id_department, period_educ, id_degree, id_form, years, year_beg, year_end, is_actual) VALUES (101, 'B093011451', 'Base', 1, 1, 'Бакалавриат', 'Бакалавр', 'ФГОС 3++', 1, '4 года', 1, 1, 4, 2023, 2027, 1)")
    # Выполняем операции только если что то меняем в existing-tables

    # 1. Указывать правильные названия таблиц. Чтобы работало с "Картами Дисциплин",
    # рекомендуется использовать в именах кавычки:
    # op.bulk_insert(название_таблицы, набор данных, ...). Либо
    # Использовать op.execute()

    # 2. Выполнять операции batch-wise, чтобы было быстрее
    insert_ignore(
        'competencies_competency_type',
        [
            {'id': 1, 'code': 'УК', 'name': 'Универсальная компетенция'},
            {'id': 2, 'code': 'ОПК', 'name': 'Общепрофессиональная компетенция'},
            {'id': 3, 'code': 'ПК', 'name': 'Профессиональная компетенция'}
        ]
    )

    insert_ignore(
        'competencies_fgos_vo',
        [
            {'id': 1, 'number': '929', 'date': '2017-09-19', 'direction_code': '09.03.01',
             'direction_name': 'Информатика и вычислительная техника', 'education_level': 'бакалавриат', 'generation': '3++'}
        ]
    )

    insert_ignore(
        'competencies_educational_program',
        [
            {'id': 1, 'fgos_vo_id': 1, 'code': '09.03.01', 'name': 'Веб-технологии',
             'profile': 'Веб-технологии', 'qualification': 'Бакалавр', 'form_of_education': 'очная', 'enrollment_year': 2024}
        ]
    )
     # Связываем ОП с АУП
    insert_ignore(
        'competencies_educational_program_aup',
        [
            {'educational_program_id': 1, 'aup_id': 101, 'is_primary': True}
        ]
    )

    insert_ignore(
        'competencies_competency',
        [
            {'id': 1, 'competency_type_id': 1, 'code': 'УК-1', 'fgos_vo_id':1,
             'name': 'Способен осуществлять поиск, критический анализ и синтез информации...'},
            {'id': 2, 'competency_type_id': 2, 'code': 'ОПК-1', 'fgos_vo_id':1,
             'name': 'Способен применять естественнонаучные и общеинженерные знания...'},
            {'id': 3, 'competency_type_id': 3, 'code': 'ПК-1', 'fgos_vo_id':None,
             'name': 'Способен выполнять работы по созданию (модификации) и сопровождению ИС...'}
        ]
    )

    insert_ignore(
        'competencies_indicator',
        [
            {'id': 10, 'competency_id': 1, 'code': 'ИУК-1.1',
             'formulation': 'Анализирует задачу, выделяя ее базовые составляющие', 'source': 'ФГОС'},
            {'id': 11, 'competency_id': 2, 'code': 'ИОПК-1.1', 'formulation': 'Знает основы высшей математики...',
             'source': 'ФГОС'},
            {'id': 12, 'competency_id': 3, 'code': 'ИПК-1.1', 'formulation': 'Знает: методологию и технологии проектирования ИС...',
             'source': 'ПС'}
        ]
    )

    # Создаем одну тестовую связь (AupData 501 - должно существовать! -  и Indicator 11)
    insert_ignore(
        'competencies_matrix',
        [
            {'aup_data_id': 501, 'indicator_id': 11}
        ]
    )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('aup_data', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('aup_data_ibfk_5', 'groups', ['id_group'], ['id_group'])
        batch_op.create_foreign_key('aup_data_ibfk_6', 'd_modules', ['id_module'], ['id'])

    # ### end Alembic commands ###
