"""merge dev into cabinet

Revision ID: e58eb7d8cc99
Revises: a67d0392a2dc
Create Date: 2024-05-30 02:06:26.123385

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e58eb7d8cc99'
down_revision = 'a67d0392a2dc'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('spr_bells',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('study_group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('num_aup', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('students',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=400), nullable=False),
    sa.Column('study_group_id', sa.Integer(), nullable=False),
    sa.Column('lk_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['study_group_id'], ['study_group.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('grade_table',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_aup', sa.Integer(), nullable=False),
    sa.Column('id_unique_discipline', sa.Integer(), nullable=False),
    sa.Column('semester', sa.Integer(), nullable=False),
    sa.Column('study_group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_aup'], ['tbl_aup.id_aup'], ),
    sa.ForeignKeyConstraint(['id_unique_discipline'], ['spr_discipline.id'], ),
    sa.ForeignKeyConstraint(['study_group_id'], ['study_group.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rpd',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_aup', sa.Integer(), nullable=False),
    sa.Column('id_unique_discipline', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_aup'], ['tbl_aup.id_aup'], ),
    sa.ForeignKeyConstraint(['id_unique_discipline'], ['spr_discipline.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('grade_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('type', sa.String(length=255), nullable=False),
    sa.Column('min_grade', sa.Integer(), nullable=True),
    sa.Column('max_grade', sa.Integer(), nullable=True),
    sa.Column('archived', sa.Boolean(), nullable=True),
    sa.Column('binary', sa.Boolean(), nullable=True),
    sa.Column('weight_grade', sa.Integer(), nullable=True),
    sa.Column('grade_table_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['grade_table_id'], ['grade_table.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('topic',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic', sa.String(length=400), nullable=True),
    sa.Column('chapter', sa.String(length=400), nullable=True),
    sa.Column('id_type_control', sa.Integer(), nullable=True),
    sa.Column('task_link', sa.String(length=400), nullable=True),
    sa.Column('task_link_name', sa.String(length=255), nullable=True),
    sa.Column('completed_task_link', sa.String(length=255), nullable=True),
    sa.Column('completed_task_link_name', sa.String(length=255), nullable=True),
    sa.Column('id_rpd', sa.Integer(), nullable=True),
    sa.Column('semester', sa.Integer(), nullable=True),
    sa.Column('study_group_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('lesson_order', sa.Integer(), nullable=True),
    sa.Column('spr_bells_id', sa.Integer(), nullable=True),
    sa.Column('date_task_finish', sa.DateTime(), nullable=True),
    sa.Column('date_task_finish_include', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['id_rpd'], ['rpd.id'], ),
    sa.ForeignKeyConstraint(['id_type_control'], ['d_control_type.id'], ),
    sa.ForeignKeyConstraint(['spr_bells_id'], ['spr_bells.id'], ),
    sa.ForeignKeyConstraint(['study_group_id'], ['study_group.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('grade_column',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=400), nullable=True),
    sa.Column('grade_table_id', sa.Integer(), nullable=False),
    sa.Column('grade_type_id', sa.Integer(), nullable=False),
    sa.Column('topic_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['grade_table_id'], ['grade_table.id'], ),
    sa.ForeignKeyConstraint(['grade_type_id'], ['grade_type.id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['topic.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('grades',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('grade_table_id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('grade_column_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['grade_column_id'], ['grade_column.id'], ),
    sa.ForeignKeyConstraint(['grade_table_id'], ['grade_table.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('aup_data', schema=None) as batch_op:
        batch_op.drop_constraint('aup_data_ibfk_18', type_='foreignkey')
        batch_op.drop_constraint('aup_data_ibfk_19', type_='foreignkey')
        batch_op.drop_constraint('aup_data_ibfk_12', type_='foreignkey')
        batch_op.drop_constraint('aup_data_ibfk_13', type_='foreignkey')
        batch_op.create_foreign_key(None, 'd_blocks', ['id_block'], ['id'], ondelete='SET NULL')
        batch_op.create_foreign_key(None, 'd_modules', ['id_module'], ['id'], ondelete='SET DEFAULT')
        batch_op.create_foreign_key(None, 'd_part', ['id_part'], ['id'], ondelete='SET NULL')
        batch_op.create_foreign_key(None, 'groups', ['id_group'], ['id_group'], ondelete='SET DEFAULT')

    with op.batch_alter_table('d_control_type', schema=None) as batch_op:
        batch_op.add_column(sa.Column('shortname', sa.String(length=255), nullable=True))

    with op.batch_alter_table('tbl_department', schema=None) as batch_op:
        batch_op.add_column(sa.Column('faculty_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'spr_faculty', ['faculty_id'], ['id_faculty'])

    with op.batch_alter_table('tbl_users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('name', sa.String(length=200), nullable=True))
        batch_op.add_column(sa.Column('auth_type', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('approved_lk', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('request_approve_date', sa.DateTime(), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tbl_users', schema=None) as batch_op:
        batch_op.drop_column('request_approve_date')
        batch_op.drop_column('approved_lk')
        batch_op.drop_column('auth_type')
        batch_op.drop_column('name')

    with op.batch_alter_table('tbl_department', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('faculty_id')

    with op.batch_alter_table('d_control_type', schema=None) as batch_op:
        batch_op.drop_column('shortname')

    with op.batch_alter_table('aup_data', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('aup_data_ibfk_13', 'd_part', ['id_part'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')
        batch_op.create_foreign_key('aup_data_ibfk_12', 'd_blocks', ['id_block'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')
        batch_op.create_foreign_key('aup_data_ibfk_19', 'groups', ['id_group'], ['id_group'], onupdate='RESTRICT', ondelete='CASCADE')
        batch_op.create_foreign_key('aup_data_ibfk_18', 'd_modules', ['id_module'], ['id'], onupdate='RESTRICT', ondelete='CASCADE')

    op.drop_table('grades')
    op.drop_table('grade_column')
    op.drop_table('topic')
    op.drop_table('grade_type')
    op.drop_table('rpd')
    op.drop_table('grade_table')
    op.drop_table('students')
    op.drop_table('study_group')
    op.drop_table('spr_bells')
    # ### end Alembic commands ###
