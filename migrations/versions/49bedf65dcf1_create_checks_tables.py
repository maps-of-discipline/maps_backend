"""create checks tables

Revision ID: 49bedf65dcf1
Revises: 7118672a7c51
Create Date: 2023-07-17 23:58:22.808075

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '49bedf65dcf1'
down_revision = '7118672a7c51'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('d_competency_code',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('d_generation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('d_specialization_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('d_type_standard',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('spr_compulsory_discipline',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tbl_rule',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=45), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('spr_additional_competency',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.Text(), nullable=False),
    sa.Column('Code', sa.Float(), nullable=False),
    sa.Column('d_competency_code_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['d_competency_code_id'], ['d_competency_code.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('spr_competency',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('d_competency_code_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['d_competency_code_id'], ['d_competency_code.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('spr_specialization',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('d_specialization_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['d_specialization_type_id'], ['d_specialization_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tbl_realized_okso',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('branch_id', sa.Integer(), nullable=False),
    sa.Column('program_code', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['branch_id'], ['spr_branch.id_branch'], ),
    sa.ForeignKeyConstraint(['program_code'], ['spr_okco.program_code'], ),
    sa.PrimaryKeyConstraint('id', 'program_code')
    )
    op.create_table('specialization_has_additional_competency',
    sa.Column('specialization_id', sa.Integer(), nullable=True),
    sa.Column('additional_competency_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['additional_competency_id'], ['spr_additional_competency.id'], ),
    sa.ForeignKeyConstraint(['specialization_id'], ['spr_specialization.id'], )
    )
    op.create_table('spr_fgos_vo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('realized_okso_id', sa.Integer(), nullable=False),
    sa.Column('IsActive', sa.Integer(), nullable=False),
    sa.Column('number', sa.Integer(), nullable=False),
    sa.Column('approval_date', sa.Date(), nullable=False),
    sa.Column('modification_date', sa.Date(), nullable=False),
    sa.Column('active_form', sa.Date(), nullable=False),
    sa.Column('type_standard_id', sa.Integer(), nullable=False),
    sa.Column('generation_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['generation_id'], ['d_generation.id'], ),
    sa.ForeignKeyConstraint(['realized_okso_id'], ['tbl_realized_okso.id'], ),
    sa.ForeignKeyConstraint(['type_standard_id'], ['d_type_standard.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tbl_users',
    sa.Column('id_user', sa.Integer(), nullable=False),
    sa.Column('login', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=200), nullable=False),
    sa.Column('id_faculty', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_faculty'], ['spr_faculty.id_faculty'], ),
    sa.PrimaryKeyConstraint('id_user'),
    sa.UniqueConstraint('login'),
    sa.UniqueConstraint('password_hash')
    )
    op.create_table('aup_info_has_rule',
    sa.Column('rule_id', sa.Integer(), nullable=True),
    sa.Column('aup_info_id', sa.Integer(), nullable=True),
    sa.Column('min', sa.Float(), nullable=True),
    sa.Column('max', sa.Float(), nullable=True),
    sa.Column('ed_izmereniya_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['aup_info_id'], ['tbl_aup.id_aup'], ),
    sa.ForeignKeyConstraint(['ed_izmereniya_id'], ['d_ed_izmereniya.id'], ),
    sa.ForeignKeyConstraint(['rule_id'], ['tbl_rule.id'], )
    )
    op.create_table('fgosvo_has_competency',
    sa.Column('fgosvo_id', sa.Integer(), nullable=True),
    sa.Column('competency_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['competency_id'], ['spr_competency.id'], ),
    sa.ForeignKeyConstraint(['fgosvo_id'], ['spr_fgos_vo.id'], )
    )
    op.create_table('fgosvo_has_compulsory_discipline',
    sa.Column('fgosvo_id', sa.Integer(), nullable=True),
    sa.Column('compulsory_discipline_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['compulsory_discipline_id'], ['spr_compulsory_discipline.id'], ),
    sa.ForeignKeyConstraint(['fgosvo_id'], ['spr_fgos_vo.id'], )
    )
    op.create_table('fgosvo_has_specialization',
    sa.Column('fgosvo_id', sa.Integer(), nullable=True),
    sa.Column('specialization_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['fgosvo_id'], ['spr_fgos_vo.id'], ),
    sa.ForeignKeyConstraint(['specialization_id'], ['spr_specialization.id'], )
    )
    with op.batch_alter_table('aup_data', schema=None) as batch_op:
        batch_op.alter_column('discipline',
               existing_type=mysql.VARCHAR(length=250),
               type_=sa.String(length=350),
               existing_nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('aup_data', schema=None) as batch_op:
        batch_op.alter_column('discipline',
               existing_type=sa.String(length=350),
               type_=mysql.VARCHAR(length=250),
               existing_nullable=False)

    op.drop_table('fgosvo_has_specialization')
    op.drop_table('fgosvo_has_compulsory_discipline')
    op.drop_table('fgosvo_has_competency')
    op.drop_table('aup_info_has_rule')
    op.drop_table('tbl_users')
    op.drop_table('spr_fgos_vo')
    op.drop_table('specialization_has_additional_competency')
    op.drop_table('tbl_realized_okso')
    op.drop_table('spr_specialization')
    op.drop_table('spr_competency')
    op.drop_table('spr_additional_competency')
    op.drop_table('tbl_rule')
    op.drop_table('spr_compulsory_discipline')
    op.drop_table('d_type_standard')
    op.drop_table('d_specialization_type')
    op.drop_table('d_generation')
    op.drop_table('d_competency_code')
    # ### end Alembic commands ###
